
// import T from 'node-telegram-bot-api'랑 같은문법.
//구시대 문법이긴 한데 이게 호환이 잘됨.
const T = require('node-telegram-bot-api')

//코드 보기 전에 알아뒀으면 좋겠는거

//노란색은 전부 함수다.
//함수() < 함수를 실행한다는 뜻이다.
//함수 < 실행이 되지 않고 저 자리에 함수 자체가 남는다
//함수 자체가 남는다는게 의아할 수 있음
//보통 x = 1+1 이런식으로 하면 우변에 2가 남고 = 때문에 x로 2가 가잖음?
//자스는 함수를 1,2,3,"가" 이런 애들이랑 똑같이 보겠다는거임
// x = 함수 < 이런식으로 하면 우변에 함수가 남아서 x에 함수가 들어감
// x = 함수() < 헷갈리기 쉬운 예시. 이땐 함수가 실행되서 함수의 반환값이 들어감

//함수의 반환값에 대한 설명도 또 안해줄 수 없지
//함수는 실행되면 반환값을 남겨. 저번 수업때 봤겠지만 return으로 반환을 할 수 있지
// 함수 !== 함수() 인걸 뇌에 각인시켜놔야함. 
// 함수(함수, 함수) 이런식으로 인자에 함수를 넘기는 경우가 있음
// 이런 경우를 callback 함수라고 하지
// 함수(함수(),함수())당연히 얘랑은 다른거 알아야하고
//--이런식으로 함수 자체가 값이 되어 넘어가는 걸 "함수가 1급 객체다"or "함수가 1급 시민이다"라고함
//--숫자, 문자열, 배열들도 1급 객체임. 이 둘과 똑같이 보겠다는거


//니봇의 토큰을 token이라는 상수에 저장한다.
const token = '5665239669:AAGlbcs_ayEvlKB-USQdzihXI_TY6tqRqE4';

//bot이라는 상수에 텔레그램 봇 인스턴스를 저장한다.

//new라는 문법이 생소할 수 있는데 저번에 배운 클래스문법임
//new는 "클래스"를 이용해서 "객체(오브젝트)"를 만드는 키워드라 보면 됨
//잘보면 TelegramBot은 노란색인걸 볼 수 있지?
//TelegramBot은 생성자(뭘생성하냐면 바로 객체!!!!)함수야.

//생성자 함수도 함수라서 인자를 받아
//첫 인자로 token, 즉 봇의 토큰을 사용하고
// 두번째 인자로 객체(중괄호 커플들 들어있는거)를 생성함
//polling이라는 key는 true라는 value를 가지고있어
//polling은 봇이 채팅 업데이트를 받을거냐 말거냐를 정하는건데 당연히 우린 true!
const bot = new T(token, {polling: true});


//이걸 보기전에 콜백함수를 배웠을거라 믿고 진행한다
//일단 bot안에 있는 on이라는 함수를 사욯하고있어
//점을 찍고 사용하는 함수들은 그 앞의 변수에 종속되어 있다는 뜻이야
//이런 함수들을 "메소드"라고 불러

//on이라는 메소드는 첫번째 인자로 문자열, 두번째 인자로 콜백 함수(화살표함수)를 받고있어
//이게 on이라는걸 존나 자주보게 될 건데 인기만점인애임
//직역하면 "message"라는 신호가 오면 콜백 함수를 실행한다 라는 뜻임
//메시지가 오면 함수가 실행된다. 이게 봇의 기초지
bot.on('message', (msg) => {
    //콜백 함수는 인자가 여러개 있을 수 있는데 여기선 하나야
    //msg라고 우리가 정해준 인자에 데이터가 자동으로 실려온 걸 볼 수 있어

    //chatId라는 상수에 (실려온 데이터).chat.id를 넣었어
  const chatId = msg.chat.id;
    

  //bot의 sendmessage 메소드를 사용하고 있고 인자는 2개! <여기까지 파악이 되면 만점이다
  //첫인자로 chatId(챗방 아디), 두번째로 보낼 메시지를 쓰고 있어
  bot.sendMessage(chatId, 'Received your message');

  //return을 써줘도 되지만 반환할 게 없으므로 굳이 안 써도 돼
  //이로써 한 메시지가 오면 동작하게될 로직들은 전부 동작했어
});